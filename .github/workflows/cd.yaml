on:
  push:
    branches:
      - main

jobs:
  deploy-to-dockerhub:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      GITHUB_SHA: ${{ github.sha }}
      DOCKERHUB_REPOSITORY: tech-challenge-fast-food-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Build, tag, and push Docker image
        run: |
          docker build --pull -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$GITHUB_SHA -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:latest .
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$GITHUB_SHA
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:latest

  deploy-eks-resources:
    runs-on: ubuntu-latest
    needs: deploy-to-dockerhub
    if: github.ref == 'refs/heads/main'

    env:
      AWS_REGION: us-east-1
      CLUSTER_NAME: tech-challenge-cluster
      GITHUB_SHA: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.32.0'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to EKS
        run: |
          kubectl apply -f kubernetes-infra/secrets.yaml
          kubectl apply -f kubernetes-infra/postgres-service.yaml
          kubectl apply -f kubernetes-infra/postgres-pv.yaml
          kubectl apply -f kubernetes-infra/postgres-statefulset.yaml
          kubectl apply -f kubernetes-infra/api-service.yaml
          kubectl apply -f kubernetes-infra/api-deployment.yaml
          kubectl apply -f kubernetes-infra/api-hpa.yaml

          kubectl set image deployment/tech-challenge-fast-food-api-deployment \
            tech-challenge-fast-food-api=$DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$GITHUB_SHA \
            --record

      - name: Check rollout status
        run: |
          kubectl rollout status deployment/api-deployment --timeout=60s || exit 1
          kubectl rollout status statefulset/postgres-statefulset --timeout=60s || exit 1